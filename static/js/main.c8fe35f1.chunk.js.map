{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","index.js"],"names":["Card","props","className","alt","src","kittie","id","username","email","CardList","kitties","map","item","SearchBox","type","placeholder","onChange","changeHandler","App","onSearchChange","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredKitties","filter","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAGaA,G,MAAO,SAAAC,GAAK,OACvB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,SACJC,IAAG,+BAA0BH,EAAMI,OAAOC,GAAvC,4BAEL,mCAAML,EAAMI,OAAOE,SAAnB,OACA,kCAAKN,EAAMI,OAAOG,MAAlB,YCNSC,G,MAAW,SAAAR,GAAK,OACvB,qBAAKC,UAAU,YAAf,SAEYD,EAAMS,QAAQC,KAAI,SAAAC,GAAI,OACtB,cAAC,EAAD,CAAoBP,OAAQO,GAAjBA,EAAKN,WCLrBO,G,MAAY,SAAAZ,GAAK,OACxB,uBAAOa,KAAK,SACNZ,UAAU,aACVa,YAAad,EAAMc,YACnBC,SAAUf,EAAMgB,kBCgCbC,G,wDAjCT,aAAc,IAAD,8BACP,gBAaNC,eAAiB,SAAAC,GACX,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAbxC,EAAKC,MAAO,CACNf,QAAS,GACTY,YAAa,IAJZ,E,gEAQO,IAAD,OACbI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACX,QAASoB,S,+BAOpC,IAAD,EAC4BC,KAAKN,MAA5Bf,EADL,EACKA,QAAQY,EADb,EACaA,YACTU,EAAkBtB,EAAQuB,QAAO,SAAArB,GAAI,OACrCA,EAAKL,SAAS2B,cAAcC,SAASb,EAAYY,kBAEvD,OACK,sBAAKhC,UAAU,MAAf,UACM,gDACA,cAAC,EAAD,CAAWa,YAAa,iBAAkBE,cAAec,KAAKZ,iBAC9D,cAAC,EAAD,CAAUT,QAASsB,W,GA5BxBI,cCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c8fe35f1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.styles.css\";\n\nexport const Card = props => (\n  <div className=\"card-container\">\n    <img\n      alt=\"kittie\"\n      src={`https://robohash.org/${props.kittie.id}?set=set4&size=180x180`}\n    />\n    <h2> {props.kittie.username} </h2>\n    <p> {props.kittie.email} </p>\n  </div>\n);\n","import React from 'react';\nimport {Card} from '../card/card.component'\nimport './card-list.styles.css';\n\nexport const CardList = props =>(\n      <div className=\"card-list\">\n            {\n                  props.kitties.map(item=>(\n                  <Card key={item.id} kittie={item}></Card>\n                  ))\n            }\n      </div>\n);","import React from 'react'\nimport './search-box.styles.css'\n\nexport const SearchBox = props =>(\n      <input type=\"search\"\n            className=\"search-box\"\n            placeholder={props.placeholder}\n            onChange={props.changeHandler}\n      />\n);","import React, {Component} from 'react';\nimport {CardList} from './components/card-list/card-list.component'\nimport {SearchBox} from './components/search-box/search-box.component'\nimport './App.css'\n\nclass App extends Component{\n      constructor(){\n            super();\n            this.state= {\n                  kitties: [],\n                  searchField: \"\"\n            }\n      }\n\n      componentDidMount(){\n            fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({kitties: users}))\n      }\n\n      onSearchChange = event =>{\n            this.setState({searchField:event.target.value});\n      }\n\n      render(){\n            const {kitties,searchField} = this.state;\n            const filteredKitties = kitties.filter(item=>\n                  item.username.toLowerCase().includes(searchField.toLowerCase())\n            );\n            return(\n                 <div className=\"App\">\n                       <h1>Kitties Finder</h1>\n                       <SearchBox placeholder={\"Search kitties\"} changeHandler={this.onSearchChange}></SearchBox>\n                       <CardList kitties={filteredKitties}></CardList>\n                 </div>\n            )\n      }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}